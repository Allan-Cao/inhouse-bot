import discord
import os
### SQL Queries ###
user_insert_query = """
INSERT INTO users
(ign, id, main_role, secondary_role, fill_queue, elo, timeout)
VALUES ( %s, %s, %s, %s, %s, %s, %s )
"""

### Setup SQL
import mysql.connector
from mysql.connector import Error

try:
    connection = mysql.connector.connect(host=os.getenv('SQL_URL'),
                                         database='inhouse', #CREATE DATABASE inhouse
                                         user=os.getenv('SQL_USER'),
                                         password=os.getenv('SQL_PWD'))
    if connection.is_connected():
        db_Info = connection.get_server_info()
        print("Connected to MySQL Server version ", db_Info)
        cursor = connection.cursor()
except Error as e:
    print("Error while connecting to MySQL", e)


def generate_queue():
    embed = discord.Embed(
        title="Queue Test",
        description="test123",
        color=discord.Colour.blurple(), # Pycord provides a class with default colors you can choose from
    )
    embed.add_field(name="A Normal Field", value="A really nice field with some information. **The description as well as the fields support markdown!**")

    embed.add_field(name="Top: Player1", value="Top: Player2", inline=True)
    embed.add_field(name="Jungle: Player3", value="Jungle: Player4", inline=True)
    embed.add_field(name="Mid: Player5", value="Mid: Player6", inline=True)
    embed.add_field(name="ADC: Player7", value="ADC: Player8", inline=True)
    embed.add_field(name="Support: Player9", value="Support: Player10", inline=True)

    embed.set_footer(text="Queue generated by Seraphine Bot") # footers can have icons too
    #embed.set_author(name="Pycord Team", icon_url="https://example.com/link-to-my-image.png")
    #embed.set_thumbnail(url="https://example.com/link-to-my-thumbnail.png")
    #embed.set_image(url="https://example.com/link-to-my-banner.png")
    return embed

def add_user(user):
    with connection.cursor() as cursor:
        cursor.executemany(user_insert_query, user)
        connection.commit()
